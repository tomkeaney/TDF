---
title: "Teams and results"
execute: 
  warning: false
---

```{r, include=FALSE}
library(tidyverse)
library(rvest)
library(polite)
library(tidyr)
library(kableExtra)
library(DT)

# Load in stage data

Stage_1 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-1/result/result")
Sprint <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-1-points")
Stage_2 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-2/result/result")
Stage_3 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-3/result/result")
Stage_4 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-4/result/result")
Stage_5 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-5/result/result")
Stage_6 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-6/result/result")
Stage_7 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-7/result/result")
Stage_8 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-8/result/result")
Stage_9 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-9/result/result")
Stage_10 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-10/result/result")
Stage_11 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-11/result/result")
Stage_12 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-12/result/result")
Stage_13 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-13/result/result")
Stage_14 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-14/result/result")
Stage_15 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-15/result/result")
Stage_16 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-16/result/result")
Stage_17 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-17/result/result")
Stage_18 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-18/result/result")
Stage_19 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-19/result/result")
Stage_20 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-20/result/result")
Stage_21 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2023/stage-21/result/result")

```

```{r, include=FALSE}
# Get results

stage_1_results <- Stage_1 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(Rnk, GC, BIB, Rider) %>% 
  mutate(Stage = 1,
         `Most combative` = if_else(BIB == 19, "YES", "NO"))

stage_2_results <- Stage_2 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(Rnk, GC, BIB, Rider) %>% 
  mutate(Stage = 2,
         `Most combative` = if_else(BIB == 46, "YES", "NO"))

stage_3_results <- Stage_3 %>%
 html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(Rnk, GC, BIB, Rider) %>% 
  mutate(Stage = 3,
         Rnk = as.character(Rnk),
         `Most combative` = if_else(BIB == 178, "YES", "NO"))

stage_4_results <- Stage_4 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(Rnk, GC, BIB, Rider) %>% 
  mutate(Stage = 4,
          Rnk = as.character(Rnk),
         `Most combative` = if_else(BIB == 93, "YES", "NO"))

stage_5_results <- Stage_5 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(Rnk, GC, BIB, Rider) %>% 
  mutate(Stage = 5,
         Rnk = recode(Rnk, DNF = "NA"),
         Rnk = as.factor(Rnk),
         `Most combative` = if_else(BIB == 6, "YES", "NO"))

#stage_6_results <- Stage_6 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 6,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.numeric(Rnk),
#         `Most combative` = if_else(BIB == 16, "YES", "NO"))

#stage_7_results <- Stage_7 %>%
#  html_node("table") %>% 
 # html_table() %>% 
 # as_tibble(.name_repair = "unique") %>% 
 # select(Rnk, GC, BIB, Rider) %>% 
  #mutate(Stage = 7,
         #Rnk = recode(Rnk, DNF = "NA"),
         #Rnk = as.numeric(Rnk),
   #      `Most combative` = if_else(BIB == 73, "YES", "NO"))

#stage_8_results <- Stage_8 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 8,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.numeric(Rnk),
#         `Most combative` = if_else(BIB == 54, "YES", "NO"))

#stage_9_results <- Stage_9 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 9,
#         Rnk = recode(Rnk, DNF = "NA"),
 #        Rnk = as.numeric(Rnk),
  #       `Most combative` = if_else(BIB == 97, "YES", "NO"))

#stage_10_results <- Stage_10 %>%
#  html_node("table") %>% 
 ## html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 10,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.numeric(Rnk),
#         `Most combative` = if_else(BIB == 143, "YES", "NO"))

#stage_11_results <- Stage_11 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 11,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.numeric(Rnk),
#         `Most combative` = if_else(BIB == 152, "YES", "NO"))

#stage_12_results <- Stage_12 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 12,
         #Rnk = recode(Rnk, DNF = "NA"),
         #Rnk = as.numeric(Rnk),
 #        `Most combative` = if_else(BIB == 25, "YES", "NO"))

#stage_13_results <- Stage_13 %>%
#  html_node("table") %>% 
 # html_table() %>% 
 # as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 13,
 #        Rnk = recode(Rnk, DNF = "NA"),
  #       Rnk = as.numeric(Rnk),
   #      `Most combative` = if_else(BIB == 171, "YES", "NO"))

#stage_14_results <- Stage_14 %>%
 # html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 14,
         #Rnk = recode(Rnk, DNF = "NA"),
         #Rnk = as.numeric(Rnk),
 #        `Most combative` = if_else(BIB == 201, "YES", "NO"))

#stage_15_results <- Stage_15 %>%
 # html_node("table") %>% 
 # html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 15,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.numeric(Rnk),
#         `Most combative` = if_else(BIB == 46, "YES", "NO"))

#stage_16_results <- Stage_16 %>%
 # html_node("table") %>% 
 # html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 16,
 #        Rnk = recode(Rnk, DNF = "NA"),
  #       Rnk = as.numeric(Rnk),
   #      `Most combative` = if_else(BIB == 196, "YES", "NO"))

#stage_17_results <- Stage_17 %>%
 # html_node("table") %>% 
#  html_table() %>% 
 # as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 17,
#         Rnk = recode(Rnk, DNF = "NA"),
 #        Rnk = as.numeric(Rnk),
  #       `Most combative` = if_else(BIB == 6, "YES", "NO"))

#stage_18_results <- Stage_18 %>%
 # html_node("table") %>% 
#  html_table() %>% 
 # as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
  #mutate(Stage = 18,
   #      Rnk = recode(Rnk, DNF = "NA"),
    #     Rnk = as.numeric(Rnk),
     #    `Most combative` = if_else(BIB == 16, "YES", "NO"))

#stage_19_results <- Stage_19 %>%
 # html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
 # select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 19,
#         Rnk = recode(Rnk, DNF = "NA"),
 #        Rnk = as.numeric(Rnk),
  #       `Most combative` = if_else(BIB == 176, "YES", "NO"))

#stage_20_results <- Stage_20 %>%
 # html_node("table") %>% 
#  html_table() %>% 
 # as_tibble(.name_repair = "unique") %>% 
  #select(Rnk, GC, BIB, Rider) %>% 
  #mutate(Stage = 20,
  #       Rnk = recode(Rnk, DNF = "NA"),
   #      Rnk = as.numeric(Rnk),
    #     `Most combative` = if_else(BIB == 176, "YES", "NO"))

#stage_21_results <- Stage_21 %>%
 # html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 21,
#         Rnk = recode(Rnk, DNF = "NA"),
 #        Rnk = as.numeric(Rnk),
  #       `Most combative` = "NO")

Stage_list <- list(stage_1_results, stage_2_results, stage_3_results, stage_4_results, stage_5_results)#, stage_6_results, stage_7_results, stage_8_results, stage_9_results, stage_10_results, stage_11_results, stage_12_results, stage_13_results, stage_14_results,stage_15_results, stage_16_results, stage_17_results, stage_18_results, stage_19_results, stage_20_results, stage_21_results)
```

# 2023 Lineups

$~$

Our lineups for 2023. 12 month PCS rankings are shown in brackets next to the riders. *Pogacar has accumulated 3618 points since the beginning of last year's tour. Only six other riders get to even half this total.

```{r, echo=FALSE}
Teams <- tibble(`Rider type` = c("General", "General", "General", "General", "Sprinter", "Sub 1", "Sub 2", "12 month PCS points"),
                Haz = c("Pogačar Tadej (1)*", "Skjelmose Matthias (8)", "Powless Neilson (15)", "Alaphilippe Julian (113)", "Pedersen Mads (7)", "Ewan Caleb (49)", "Martin Guillaume (37)", "10405"),
                Bergs = c("Vingegaard Jonas (4)", "Gaudu David (18)", "Urán Rigoberto (53)", "Mohorič Matej (56)", "Girway Biniam (81)", "Kuss Sepp (94)", "Wright Fred (87)", "6818"),
                Falcs = c("Pidcock Thomas (16)", "Carapaz Richard (73)", "Cort Magnus (65)", "Yates Simon (36)", "van Aert Wout (3)", "Jungels Bob (141)", "Cavendish Mark (167)", "6714"),
                Zing = c("Van Der Poel Mathieu (13)", "Yates Adam (9)", "Bernal Egan (288)", "Bilbao Pello (27)", "Philipsen Jasper (5)", "Welsford Sam (82)", "Bardet Romain (22)", "7800"),
                Stiff = c("O'Connor Ben (58)", "Pinot Thibaut (17)", "Mas Enric (11)", "Ciccone Giulio (42)", "Groenewegen Dylan (24)", "Coquard Bryan (70)", "Meeus Jordi (50)", "6640"),
                Willo = c("Hindley Jai (48)", "Landa Mikel (21)", "Kelderman Wilco (145)", "Laporte Christophe (10)", "Jakobsen Fabio (51)", "Andersen Søren Kragh (107)", "Bettiol Alberto (84)", "5758")) 

# For the standings

#startlist <- read_csv("Riders.csv") #%>%
  #mutate(`Sub activated` = case_when(BIB == 8 ~ "6",
   #                                  BIB == 151 ~ "9",
    #                                 BIB == 131 ~ "9",
     #                                BIB == 25 ~ "15",
      #                               BIB != c(8, 11, 151, 131) ~ "NO"))

  


# Who has who?

#Teams %>% 
 # kbl() %>% 
  #kable_minimal() %>% 
 # column_spec(8, background = spec_color(data$`DIFFERENCE RANK`, option = "A", begin = 0.6, end = 0.95))
  
Teams %>%
  mutate(Stiff = cell_spec(Stiff, "html", strikeout = ifelse(Stiff == "Mas Enric (11)", TRUE, FALSE)), 
         Falcs = cell_spec(Falcs, "html", strikeout = ifelse(Falcs == "Carapaz Richard (73)", TRUE, FALSE))) %>% #,
  #       Haz = cell_spec(Haz, "html", strikeout = ifelse(Haz == "Martin Guillaume", TRUE, FALSE)), 
   #      Zing = cell_spec(Zing, "html", strikeout = ifelse(Zing == "Guerreiro Ruben", TRUE, FALSE))) %>% 
  kable(escape = F) %>% 
  kable_styling() %>% 
  #row_spec(5, color = "black", background = "#89c0b6") %>% 
  row_spec(6:7, color = "white", background = "#A7D3D4") %>% 
  column_spec(1, bold = TRUE)
  
```

$~$

# Provisional standings

$~$

```{r, echo=FALSE}
  
Stage_Scoring <- function(stage_data){
  stage_data %>%
  mutate(stage_points = recode(Rnk, "1" = 10, "2" = 6, "3" = 4, "4" = 2, "5" = 1, .default = 0),
         GC_points = recode(GC, "1" = 25, "2" = 22, "3" = 20,
                            "4" = 18, "5" = 16, "6" = 14, "7" = 14,
                            "8" = 12, "9" = 10, "10" = 10, "11" = 8,
                            "12" = 8, "13" = 6, "14" = 6, "15" = 6, .default = 0),
         `Most combative points` = if_else(`Most combative` == "YES", 10, 0))
}

Total_score <- map_dfr(Stage_list, Stage_Scoring) 

Total_score_tidy <- Total_score %>% 
  group_by(BIB) %>% 
  mutate(Total_stage_points = sum(stage_points, na.rm = TRUE),
         Total_most_combative_points = sum(`Most combative points`, na.rm = TRUE)) #%>% 
  #distinct(BIB, .keep_all = TRUE)

a <- 
  Total_score_tidy %>%
  distinct(BIB, .keep_all = TRUE) %>% 
  select(Rider, BIB, Total_stage_points, Total_most_combative_points)

b <-
  Total_score %>% 
  filter(Stage == max(Stage)) %>%
  select(GC, BIB, GC_points)

Results_complete <- 
  left_join(a, b) %>%
  mutate(Directeur = case_when(
    BIB == 11 | BIB == 83 | BIB == 46 | BIB == 51 | BIB == 86 ~ "Haz",
    BIB == 1| BIB == 31| BIB == 48| BIB == 67| BIB == 111 ~ "Bergs",
    BIB == 161| BIB == 26| BIB == 191| BIB == 45| BIB == 6 ~ "Falcs",
    BIB == 19| BIB == 101| BIB == 106| BIB == 21| BIB == 65 ~ "Zing",
    BIB == 91 | BIB == 37| BIB == 81| BIB == 164| BIB == 76 ~ "Stiff",
    BIB == 71| BIB == 62 | BIB == 3 | BIB == 5 | BIB == 56 ~ "Willo",
    .default = "Not selected"
  )) %>% 
  # add the jersey wearing points
  mutate(Yellow_wearer_points = case_when(BIB == 19 | BIB == 71 ~ "10",
                                          .default = "0"),
         Green_wearer_points = case_when(BIB == 19 | BIB == 125 | BIB == 106 ~ "5",
                                         .default = "0"),
         White_wearer_points = case_when(BIB == 11 ~ "5",
                                         .default = "0"),
         Polka_wearer_points = case_when(BIB == 46 | BIB == 95 ~ "5",
                                         .default = "0")) %>% 
  ungroup() %>% 
  mutate(across(8:11, ~ as.numeric(.x))) %>% 
  mutate(GC_points = replace_na(GC_points, 0),
         #GC = replace_na(GC, "DNF"), 
         Jersey_points = Yellow_wearer_points + Green_wearer_points + White_wearer_points + 
           Polka_wearer_points,
         `Green points` = recode(BIB, "106" = 10, "122" = 8, "125" = 6, .default = 0),
         `Mountain points` = recode(BIB, "95" = 10, "81" = 6, "71" = 4, .default = 0),
          Final_score = Total_stage_points + GC_points + Total_most_combative_points + 
           Yellow_wearer_points + Green_wearer_points + White_wearer_points + 
           Polka_wearer_points + `Green points` + `Mountain points`) %>% 
  arrange(-Final_score) %>% 
  select(Rider, BIB, Directeur, GC, Total_stage_points, Total_most_combative_points, GC_points, Jersey_points, `Green points`, `Mountain points`, Final_score)
  

Team_rankings <-
  Results_complete %>%
  select(-c(Rider, BIB)) %>% 
  #filter(Sub == "NO" | `Sub activated` != "NO") %>% # fix this so sub activates
  group_by(Directeur) %>% 
  mutate(`Provisional score` = sum(Final_score),
         `Confirmed points` = sum(Total_stage_points) + sum(Total_most_combative_points) +
           sum(Jersey_points)) %>% 
  arrange(-`Provisional score`) %>% 
  distinct(Directeur, .keep_all = TRUE) %>% 
  select(Directeur, `Confirmed points`, `Provisional score`) %>% 
  filter(Directeur  != "Not selected")

Rider_rankings <-
  Results_complete %>% 
  arrange(-Final_score) %>% 
  rename(`Provisional score` = Final_score) %>% 
  rename(`Directeur sportif` = Directeur,
         `Cumulative stage points` = Total_stage_points,
         `Cumulative most combative points` = Total_most_combative_points,
         `GC points` = GC_points)# %>% 
  #mutate(`Green points` = recode(BIB, "19" = 10, "161" = 8, "11" = 6, .default = 0),
  #       `Mountain points` = recode(BIB, "46" = 10, "184" = 6, "118" = 4, .default = 0),
    #     `Final score` = `Provisional score` + `Green points` + `Mountain points`) 



```


```{r, echo=FALSE}
Team_rankings %>% 
  #tibble(#Sub_penalty = c(0, 0, 0, 0, -20, 0),
       #  Green_points = c(14, 0, 10, 0, 0, 0),
        # Mountain_points = c(4, 10, 0, 0, 0, 0)) %>% 
 # mutate(`Confirmed points` = `Confirmed points` #+ Sub_penalty,
  #       `Final score` = `Provisional score` + Sub_penalty + Green_points + Mountain_points) %>% 
  #select(`Directeur sportif`, `Final score`, Green_points, Mountain_points) %>% 
  #arrange(-`Final score`) %>% 
  kable() %>% 
  kable_styling()
```

# Rider rankings

```{r, echo=FALSE}


# Create a function to build HTML searchable tables

#]my_data_table <- function(df){
  #datatable(
   # df, rownames=FALSE,
  #  autoHideNavigation = TRUE,
#    extensions = c("Scroller",  "Buttons"),
 #   options = list(
  #    dom = 'Bfrtip',
   #   deferRender=TRUE,
    #  scrollX=TRUE, scrollY=400,
     # scrollCollapse=TRUE,
#      buttons =
 #       list('pageLength', 'colvis', 'csv', list(
  #        extend = 'pdf',
   #       pageSize = 'A4',
    #      orientation = 'landscape',
     #     filename = 'tour_data')),
     # pageLength = 200
    #)
#  )
#}

kable(Rider_rankings %>% 
                select(Rider, `Directeur sportif`, `Provisional score`,
                       `GC points`, `Green points`, `Mountain points`, `Cumulative stage points`, `Cumulative most combative points`, Jersey_points)) %>% 
  kable_styling() %>% 
   scroll_box(width = "1000px", height = "800px")


```

## Stage results

### Stage 1

```{r, echo=FALSE}
  
Stage_Scoring(stage_1_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 2

```{r, echo=FALSE}
  
Stage_Scoring(stage_2_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 3

```{r, echo=FALSE}
  
Stage_Scoring(stage_3_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 4

```{r, echo=FALSE}
  
Stage_Scoring(stage_4_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 5

```{r, echo=FALSE}
  
Stage_Scoring(stage_5_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```
