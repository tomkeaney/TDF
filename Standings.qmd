---
title: "Teams and results"
execute: 
  warning: false
---

```{r, include=FALSE}
library(tidyverse)
library(rvest)
library(polite)
library(tidyr)
library(kableExtra)
library(DT)

# Load in stage data

Stage_1 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-1")
#Sprint <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-1-points")
Stage_2 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-2/result/result")
Stage_3 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-3/result/result")
Stage_4 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-4/result/result")
#Stage_5 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-5/result/result")
#Stage_6 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-6/result/result")
#Stage_7 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-7/result/result")
#Stage_8 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-8/result/result")
#Stage_9 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-9/result/result")
#Stage_10 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-10/result/result")
#Stage_11 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-11/result/result")
#Stage_12 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-12/result/result")
#Stage_13 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-13/result/result")
#Stage_14 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-14/result/result")
#Stage_15 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-15/result/result")
#Stage_16 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-16/result/result")
#Stage_17 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-17/result/result")
#Stage_18 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-18/result/result")
#Stage_19 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-19/result/result")
#Stage_20 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-20/result/result")
#Stage_21 <- read_html("https://www.procyclingstats.com/race/tour-de-france/2025/stage-21/result/result")

```

```{r, eval=TRUE, include=FALSE}
# Get results

stage_1_results <- Stage_1 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>%
  select(X1, X2, X4, X8) %>% 
  rename(Rnk = X1, GC = X2, BIB = X4, Rider = X8) %>% 
  mutate(Stage = 1,
         `Most combative` = if_else(BIB == 188, "YES", "NO"))

stage_2_results <- Stage_2 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(X1, X2, X4, X8) %>% 
  rename(Rnk = X1, GC = X2, BIB = X4, Rider = X8) %>% 
  mutate(Stage = 2,
         Rnk = as.factor(Rnk),
         `Most combative` = if_else(BIB == 152, "YES", "NO"))

stage_3_results <- Stage_3 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(X1, X2, X4, X8) %>% 
  rename(Rnk = X1, GC = X2, BIB = X4, Rider = X8) %>% 
  filter(!str_detect(GC, "Danny")) %>% 
  mutate(Stage = 3,
         Rnk = as.factor(Rnk),
         GC = as.integer(GC),
         BIB = as.integer(BIB),
         `Most combative` = if_else(BIB == 300, "YES", "NO")) # not awarded

stage_4_results <- Stage_4 %>%
  html_node("table") %>% 
  html_table() %>% 
  as_tibble(.name_repair = "unique") %>% 
  select(X1, X2, X4, X8) %>% 
  rename(Rnk = X1, GC = X2, BIB = X4, Rider = X8) %>% 
  mutate(Stage = 4,
         Rnk = as.factor(Rnk),
         `Most combative` = if_else(BIB == 55, "YES", "NO"))
#
#stage_5_results <- Stage_5 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 5,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 98, "YES", "NO"))
#
#stage_6_results <- Stage_6 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 6,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 45, "YES", "NO"))
#
#stage_7_results <- Stage_7 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 7,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = "NO")
#
#stage_8_results <- Stage_8 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 8,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.factor(Rnk),
#         `Most combative` = if_else(BIB == 202, "YES", "NO"))
#
#stage_9_results <- Stage_9 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 9,
#         #Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.factor(Rnk),
#         `Most combative` = if_else(BIB == 47, "YES", "NO"))
#
#stage_10_results <- Stage_10 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 10,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 173, "YES", "NO"))
#
#stage_11_results <- Stage_11 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 11,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 11, "YES", "NO"))
#
#stage_12_results <- Stage_12 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 12,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.factor(Rnk),
#         `Most combative` = if_else(BIB == 97, "YES", "NO"))
#
#stage_13_results <- Stage_13 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 13,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.factor(Rnk),
#         `Most combative` = if_else(BIB == 201, "YES", "NO"))
#
#stage_14_results <- Stage_14 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 14,
#         Rnk = recode(Rnk, DNF = "NA"),
#         Rnk = as.factor(Rnk),
#         `Most combative` = if_else(BIB == 115, "YES", "NO"))
#
#stage_15_results <- Stage_15 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 15,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 111, "YES", "NO"))
#
#stage_16_results <- Stage_16 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 16,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = "214")
#
#stage_17_results <- Stage_17 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 17,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 93, "YES", "NO"))
#
#stage_18_results <- Stage_18 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 18,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 204, "YES", "NO"))
#
#stage_19_results <- Stage_19 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 19,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 111, "YES", "NO"))
#
#stage_20_results <- Stage_20 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 20,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = if_else(BIB == 151, "YES", "NO"))
#
#stage_21_results <- Stage_21 %>%
#  html_node("table") %>% 
#  html_table() %>% 
#  as_tibble(.name_repair = "unique") %>% 
#  select(Rnk, GC, BIB, Rider) %>% 
#  mutate(Stage = 21,
#         Rnk = as.factor(Rnk),
#         Rnk = recode(Rnk, DNF = "NA"),
#         `Most combative` = "NO")

Stage_list <- list(stage_1_results, stage_2_results, stage_3_results, stage_4_results)#,
                   #stage_5_results, stage_6_results, stage_7_results, stage_8_results, 
                   #stage_9_results, stage_10_results, stage_11_results, stage_12_results, stage_13_results, stage_14_results, stage_15_results, stage_16_results, stage_17_results, stage_18_results, stage_19_results, stage_20_results, stage_21_results)
                
```

# 2025 Lineups

$~$

Our lineups for 2025. 12 month PCS rankings are shown in brackets next to the riders. *Pogacar has accumulated 3833 points since the beginning of last year's tour. Only four other riders get to even half this total.

```{r, echo=FALSE}
Teams <- 
  tibble(`Rider type` = c("General", "General", "General", "General", "Domestique", "Sprinter", "Sub 1", "Sub 2"),
         Ben = c("Pogačar Tadej", "Vauquelin Kevin", "Gall Felix", "Cort Magnus", "Yates Adam", "Milan Jonathan", "Lutsenko Alexey", "Van Eetvelt Lennert"),
         Zing = c("Vingegaard Jonas", "Storer Michael", "Skjelmose Matthias", "Martinez Lenny", "Van Aert Wout", "Nys Thibau", "Warenskjold Soren", "Van Den Broek Frank"),
         Falcs = c("Van Der Poel Mathieu", "Ganna Filippo", "Powless Neilson", "Healy Ben", "Kuss Sepp", "Merlier Tim", "Mohoric Matej (subbed in)", "Theuns Edward"),
         Haz = c("Evenepoel Remco", "Roglic Primoz", "Onley Oscar", "O'Connor Ben", "Jorgenson Matteo", "De Lie Arnaud", "Andresen Tobias Lund", "Johannessen Tobias Halland"),
         Bergs = c("Lipowitz Florian", "Mas Enric", "Coquard Bryan", "Buitrago Santiago", "Vlasov Aleksandr", "Philipsen Jasper (DNF)", "Woods Michael", "Ackermann Pascal"),
         Willo = c("Almedia Joao", "Rodriguez Carlos", "Hirschi Marc", "Alaphilippe Julian", "Yates Simon", "Girmay Biniam", "Groenewegen Dylan", "Gregoire Romain")) 

# For the standings

#startlist <- read_csv("Riders.csv") #%>%
  #mutate(`Sub activated` = case_when(BIB == 8 ~ "6",
   #                                  BIB == 151 ~ "9",
    #                                 BIB == 131 ~ "9",
     #                                BIB == 25 ~ "15",
      #                               BIB != c(8, 11, 151, 131) ~ "NO"))

  


# Who has who?

#Teams %>% 
 # kbl() %>% 
  #kable_minimal() %>% 
 # column_spec(8, background = spec_color(data$`DIFFERENCE RANK`, option = "A", begin = 0.6, end = 0.95))
  
Teams %>%
 # mutate(Zing = cell_spec(Zing, strikeout = ifelse(Zing == "Pedersen Mads (4)", TRUE, FALSE))) %>%  
 #        Falcs = cell_spec(Falcs, "html", strikeout = ifelse(Falcs == "Carapaz Richard (73)" | Falcs == "Cavendish Mark (167)", TRUE, FALSE)),
  #       Willo = cell_spec(Willo, "html", strikeout = ifelse(Willo == "Jakobsen Fabio (51)", TRUE, FALSE)), 
   #      Zing = cell_spec(Zing, "html", strikeout = ifelse(Zing == "Bardet Romain (22)", TRUE, FALSE)),
    #     Haz = cell_spec(Haz, "html", strikeout = ifelse(Haz == "Ewan Caleb (49)", TRUE, FALSE))) %>% 
  knitr::kable(escape = F, format="markdown") %>% 
  kable_styling() %>% 
  #cell_spec(2, strikeout = ifelse(Zing == "Pedersen Mads (4)", TRUE, FALSE)) %>%
  #row_spec(5, color = "black", background = "#89c0b6") %>% 
  row_spec(7:8, color = "white", background = "#A7D3D4") %>% 
  column_spec(1, bold = TRUE)
  
```

$~$

# Final standings

$~$

```{r, echo=FALSE}
  
Stage_Scoring <- function(stage_data){
  stage_data %>%
  mutate(stage_points = recode(Rnk, "1" = 10, "2" = 6, "3" = 4, "4" = 2, "5" = 1, .default = 0),
         GC_points = recode(GC, "1" = 25, "2" = 22, "3" = 20,
                            "4" = 18, "5" = 16, "6" = 14, "7" = 14,
                            "8" = 12, "9" = 10, "10" = 10, "11" = 8,
                            "12" = 8, "13" = 6, "14" = 6, "15" = 6, .default = 0),
         `Most combative points` = if_else(`Most combative` == "YES", 10, 0))
}

Total_score <- map_dfr(Stage_list, Stage_Scoring)

Total_score_tidy <- Total_score %>% 
  group_by(BIB) %>% 
  mutate(Total_stage_points = sum(stage_points, na.rm = TRUE),
         Total_most_combative_points = sum(`Most combative points`, na.rm = TRUE)) #%>% 
  #distinct(BIB, .keep_all = TRUE)

a <- 
  Total_score_tidy %>%
  distinct(BIB, .keep_all = TRUE) %>% 
  select(Rider, BIB, Total_stage_points, Total_most_combative_points) %>% 
  mutate(Total_stage_points = if_else(BIB == 1, Total_stage_points/2, Total_stage_points),
         Total_most_combative_points = if_else(BIB == 1, Total_most_combative_points/2, Total_most_combative_points))

b <-
  Total_score %>% 
  filter(Stage == max(Stage)) %>%
  select(GC, BIB, GC_points) %>% 
  mutate(GC_points = if_else(BIB == 1, GC_points/2, GC_points))

Results_complete <- 
  left_join(a, b) %>%
  mutate(Directeur = case_when(
    BIB == 21 | BIB == 71 | BIB == 191 | BIB == 121 | BIB == 15 | BIB == 195 | BIB == 221 ~ "Haz",
    BIB == 72| BIB == 141| BIB == 163| BIB == 51| BIB == 78 | BIB == 101 | BIB == 201 | BIB == 202 ~ "Bergs",
    BIB == 106| BIB == 55| BIB == 35| BIB == 31| BIB == 16 | BIB == 24 | BIB == 88 ~ "Falcs",
    BIB == 11| BIB == 17| BIB == 55| BIB == 85| BIB == 117 | BIB == 83 | BIB == 228 | BIB == 198 ~ "Zing",
    BIB == 1 | BIB == 131| BIB == 151| BIB == 223| BIB == 8 | BIB == 81 | BIB == 206 | BIB == 217 ~ "Ben",
    BIB == 2| BIB == 66 | BIB == 111 | BIB == 114 | BIB == 18 | BIB == 41 | BIB == 124 | BIB == 94 ~ "Willo",
    .default = "Not selected"
  )) %>% 
  # add the jersey wearing points
  mutate(Yellow_wearer_points = case_when(BIB == 101 | BIB == 106 ~ "10",
                                          .default = "0"),
         Green_wearer_points = case_when(BIB == 101 | BIB == 81 ~ "5",
                                         .default = "0"),
         White_wearer_points = case_when(BIB == 41 | BIB == 131 ~ "5",
                                         .default = "0"),
         Polka_wearer_points = case_when(BIB == 167 | BIB == 1 | BIB == 7 ~ "5",
                                         .default = "0"),
         Domestique_points = case_when(BIB == 8 ~ "11", # 5 + 6
                                       BIB == 17 ~ "6", # 2 + 4
                                       BIB == 16 ~ "6", # 2 + 4
                                       BIB == 15 ~ "6", # 2 + 4
                                       BIB == 78 ~ "0", # 
                                       BIB == 18 ~ "6", # 2 + 4
                                         .default = "0"),
         Breakaway_points = case_when(BIB == 188 | BIB == 167 |
                                        BIB == 152 | BIB == 218 | BIB == "227" |
                                        BIB == 175 | BIB == 55 | BIB == 107 | BIB == 112 | BIB == 139 ~ "5",
                                         .default = "0")) %>% 
  mutate(Polka_wearer_points = if_else(BIB == 1, "2.5", Polka_wearer_points)) %>% 
  ungroup() %>% 
  mutate(across(8:12, ~ as.numeric(.x))) %>% 
  mutate(GC_points = replace_na(GC_points, 0),
         #GC = replace_na(GC, "DNF"), 
         Jersey_points = Yellow_wearer_points + Green_wearer_points + White_wearer_points + 
           Polka_wearer_points,
         `Green points` = recode(BIB, "81" = 10, "41" = 8, "106" = 6, .default = 0),
         `White points` = recode(BIB, "131" = 10, "191" = 8, "21" = 6, .default = 0),
         `Mountain points` = recode(BIB, "1" = 5, "7" = 6, "11" = 4, .default = 0),
          Final_score = Total_stage_points + GC_points + Total_most_combative_points + 
           Yellow_wearer_points + Green_wearer_points + White_wearer_points + 
           Polka_wearer_points + `Green points` + `Mountain points` + `White points` + Domestique_points) %>% 
  arrange(-Final_score) %>% 
  select(Rider, BIB, Directeur, GC, Total_stage_points, Total_most_combative_points, GC_points, Jersey_points, Domestique_points, `Green points`, `White points`, `Mountain points`, Final_score)
  

Team_rankings <-
  Results_complete %>%
  select(-c(Rider, BIB)) %>% 
  #filter(Sub == "NO" | `Sub activated` != "NO") %>% # fix this so sub activates
  group_by(Directeur) %>% 
  mutate(`Provisional score` = sum(Final_score),
         `Confirmed points` = sum(Total_stage_points) + sum(Total_most_combative_points) +
           sum(Jersey_points) + sum(Domestique_points)) %>% 
  arrange(-`Provisional score`) %>% 
  distinct(Directeur, .keep_all = TRUE) %>% 
  select(Directeur, `Confirmed points`, `Provisional score`) %>%
  # next line solves subbed points scored before getting subbed on
  #mutate(`Confirmed points` = case_when(Directeur == "Falcs" ~ `Confirmed points` - 49,
   #                                     Directeur == "Ben" ~ `Confirmed points` - 10,
    #                                    Directeur == "Haz" ~ `Confirmed points` - 1,
     #                                   .default = `Confirmed points`),
      #   `Provisional score` = case_when(Directeur == "Falcs" ~ `Provisional score` - 49,
       #                                 Directeur == "Ben" ~ `Provisional score` - 10,
        #                                Directeur == "Haz" ~ `Provisional score` - 1,
         #                               .default = `Provisional score`)) %>% 
  filter(Directeur  != "Not selected")

Rider_rankings <-
  Results_complete %>% 
  arrange(-Final_score) %>% 
  rename(`Final score` = Final_score) %>% 
  rename(`Directeur sportif` = Directeur,
         `Cumulative stage points` = Total_stage_points,
         `Cumulative most combative points` = Total_most_combative_points,
         `GC points` = GC_points)# %>% 
  #mutate(`Green points` = recode(BIB, "19" = 10, "161" = 8, "11" = 6, .default = 0),
  #       `Mountain points` = recode(BIB, "46" = 10, "184" = 6, "118" = 4, .default = 0),
    #     `Final score` = `Provisional score` + `Green points` + `Mountain points`) 

#Break_kms <- tibble(
 # Directeur = c("Haz", "Bergs", "Falcs", "Zing", "Stiff", "Willo"),
  #Break_kms = c(2481, 922, 847, 738, 1431, 833)) %>% 
  #mutate(`Break points` = round(Break_kms / 50, 0))

```


```{r, echo=FALSE, eval=FALSE}
Team_rankings %>% 
  rename(`Final score` = `Provisional score`) %>% 
  select(Directeur, `Final score`) %>% 
  #left_join(Break_kms %>% select(Directeur, `Break points`)) %>%
  #mutate(`Final score` = `Final score` + `Break points`) %>% 
  arrange(-`Final score`) %>% 
  #tibble(#Sub_penalty = c(0, 0, 0, 0, -20, 0),
       #  Green_points = c(14, 0, 10, 0, 0, 0),
        # Mountain_points = c(4, 10, 0, 0, 0, 0)) %>% 
 # mutate(`Confirmed points` = `Confirmed points` #+ Sub_penalty,
  #       `Final score` = `Provisional score` + Sub_penalty + Green_points + Mountain_points) %>% 
  #select(`Directeur sportif`, `Final score`, Green_points, Mountain_points) %>% 
  #arrange(-`Final score`) %>% 
  kable() %>% 
  kable_styling()
```

# Rider rankings

```{r, echo=FALSE, eval=FALSE}


# Create a function to build HTML searchable tables

my_data_table <- function(df){
  datatable(
    df, rownames=FALSE,
    autoHideNavigation = TRUE,
    extensions = c("Scroller",  "Buttons"),
    options = list(
      dom = 'Bfrtip',
      deferRender=TRUE,
      scrollX=TRUE, scrollY=600,
      scrollCollapse=TRUE,
      buttons =
        list('pageLength', 'colvis', 'csv', list(
          extend = 'pdf',
          pageSize = 'A4',
          orientation = 'landscape',
          filename = 'tour_data')),
      pageLength = 100
    )
  )
}


Rider_rankings %>% 
                select(Rider, `Directeur sportif`, `Final score`,
                       `GC points`, `Green points`, `White points`, `Mountain points`, `Cumulative stage points`, `Cumulative most combative points`, Jersey_points, Domestique_points) %>% 
  my_data_table()
```

## Stage results

### Stage 1

```{r, echo=FALSE}
  
Stage_Scoring(stage_1_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 2

```{r, echo=FALSE}
  
Stage_Scoring(stage_2_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 3

```{r, echo=FALSE}
  
Stage_Scoring(stage_3_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 4

```{r, echo=FALSE}
  
Stage_Scoring(stage_4_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 5

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_5_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 6

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_6_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 7

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_7_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 8

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_8_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 9

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_9_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 10

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_10_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 11

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_11_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 12

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_12_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 13

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_13_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 14

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_14_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 15

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_15_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 16

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_16_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 17

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_17_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 18

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_18_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 19

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_19_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 20

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_20_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```

### Stage 21

```{r, echo=FALSE, eval = FALSE}
  
Stage_Scoring(stage_21_results) %>%
        rename(`Stage result` = Rnk,
               `Stage points` = stage_points) %>% 
                select(Rider, `Stage result`, `Stage points`) %>% 
  kable() %>% 
  kable_styling() %>% 
   scroll_box(width = "800px", height = "800px")
  
```
